services:
  discovery:
    build: ./discovery
    container_name: discovery-service
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      retries: 4

  config-server:
    build: ./config-server
    container_name: config-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery:8761/eureka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/actuator/health"]
      interval: 10s
      retries: 4
    depends_on:
      discovery:
        condition: service_healthy

  mysql-user:
    image: mysql:8.0
    container_name: mysql-db-user
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user
    ports:
      - "3304:3306"
    volumes:
      - mysql_data_user:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      interval: 10s
      retries: 10

  user:
    build: ./user
    container_name: user-service
    ports:
      - '8073:8073'
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:9999
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db-user:3306/user?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8073/actuator/health"]
      interval: 10s
      retries: 4
    depends_on:
      config-server:
        condition: service_healthy
      mysql-user:
        condition: service_healthy

  mysql-cours:
    image: mysql:8.0
    container_name: mysql-db-cours
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cours
    ports:
      - "3309:3306"
    volumes:
      - mysql_data_cours:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      interval: 10s
      retries: 10

  cours:
    build: ./cours
    container_name: cours-service
    ports:
      - '8090:8090'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:9999
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db-cours:3306/cours?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/actuator/health"]
      interval: 10s
      retries: 4
    depends_on:
      discovery:
        condition: service_healthy
      user:
        condition: service_healthy
      mysql-cours:
        condition: service_healthy

  gateway:
    build: ./gateway
    container_name: gateway-service
    ports:
      - '8888:8888'
    expose:
      - '8888'
    depends_on:
      discovery:
        condition: service_healthy
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:9999
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    ports:
      - "8080:8080"   # Jenkins Web UI
      - "50000:50000" # Agent communication
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Mount Docker socket
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=123
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/login" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
volumes:
  mysql_data_user:
  mysql_data_cours:
  jenkins_data: